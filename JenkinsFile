pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://192.168.131.128:9000"
    GIT_USER_NAME = "noredinbah"
    GIT_USER_EMAIL = "lhrinourdine9@gmail.com"
    SOURCE_REPO = "https://github.com/noredinbah/spring-boot-app.git"
    MANIFEST_REPO = "https://github.com/noredinbah/your-manifests-repo.git"
    MANIFEST_DIR = "manifests"
  }

  stages {

    stage('Checkout Code') {
      steps {
        git branch: 'main', url: "${SOURCE_REPO}"
      }
    }

    stage('Build and Test') {
      steps {
        sh 'mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL'
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "noredineba/img-ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh 'docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File and Push Manifests') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            # Clone the manifests repo
            git clone https://${GITHUB_TOKEN}@github.com/noredinbah/your-manifests-repo.git ${MANIFEST_DIR}
            cd ${MANIFEST_DIR}

            git config user.email "${GIT_USER_EMAIL}"
            git config user.name "${GIT_USER_NAME}"

            # Replace image tag
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            git add .
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push origin main
          '''
        }
      }
    }
  }
}
